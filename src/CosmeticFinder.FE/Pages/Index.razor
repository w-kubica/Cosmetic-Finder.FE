@page "/"
@using CosmeticFinder.FE.Gateways
@using CosmeticFinder.FE.Gateways.Requests
@using CosmeticFinder.FE.Gateways.Responses
@using System.Security.AccessControl

@layout MainLayout
@inject ICosmeticFinder CosmeticFinderApi

@*<div class="container mt-3">*@
   
    
   
 
  @*  <div class="d-flex justify-content-between
             mb-3 text-white">
        <div class="p-2 fill_compose"><input type="text" name="skladnik" placeholder="Wpisz składnik" @bind="@_searchText"></div>
        <div class="p-2 category">
            <select class="category" @bind="@SelectedCategoryId">
                <option value="0" selected>Wybierz kategorię</option>
                @if (_categories is not null)
                {
                    @foreach (var item in _categories)
                    {
                        <option value="@item.Id"> @item.Name </option>
                    }
                }
            </select>
        </div>
        <div class="p-2">
            <button type="button" class="search-btn " role="button" @onclick="e => FindCosmetics(_pageNumber = 1)">Szukaj</button>
        </div>
    </div>*@
   


<div class="container">
    
    <form class="form-horizontal">
        <div class="form-group">
            <div class="fill_compose">
                <input type="text" name="skladnik" placeholder="Wiele składników oddziel przecinkami" @bind="@_searchText">
            </div>
         </div>
   @*
        <div class="form-group">
            <div class="isContain">
                <EditForm Model="_searchOption">
                    <InputRadioGroup @bind-Value="SelectedSearchOption">
                        @foreach (var option in _searchOptions)
                        {
                            <InputRadio Value="option.IsContain"/>
                            @option.Name
                        }
                    </InputRadioGroup>
                </EditForm>
            </div>
        </div>*@

        <div class="form-inline wrapper">
            <div class="isContain">
                <EditForm Model="_searchOption">
                    <InputRadioGroup @bind-Value="SelectedSearchOption">
                        @foreach (var option in _searchOptions)
                        {
                            <InputRadio Value="option.IsContain"/>
                            @option.Name
                        }
                    </InputRadioGroup>
                </EditForm>
            </div>
            <select class="category" @bind="@SelectedCategoryId">
                    <option value="0" selected>Wybierz kategorię</option>
                    @if (_categories is not null)
                    {
                        @foreach (var item in _categories)
                        {
                            <option value="@item.Id"> @item.Name </option>
                        }
                    }
                </select>
            
            <button type="button" class="search-btn " role="button" @onclick="e => FindCosmetics(_pageNumber = 1)">Szukaj</button>
        </div>
        <div class="form-group  text-wrap">
            <div class="popularne">
                <p class="text-xl-left">WYBIERZ Z POPULARNYCH WYSZUKIWAŃ</p>
            </div>
        </div>
        
          
 
</form>

    <div class="btn-toolbar popularne-buttons" data-toggle="buttons">
        <button class="popularne-btn btn btn-outline-danger" role="button" @onclick="Silikony"> Bez silikonów</button>
    <button class="popularne-btn btn btn-outline-danger" role="button">Nie dla wegan </button >
    <button class="popularne-btn btn btn-outline-danger" role="button">Bez alergenów </button >
        <button class="popularne-btn btn btn-outline-danger" role="button">Nie dla kobiet w ciąży </button >
        <button class="popularne-btn btn btn-outline-danger" role="button">Antyoksydanty </button>
        <button class="popularne-btn-2 btn btn-outline-danger" role="button">Bez substancji zapachowych </button >


</div>

@* <div class="search_properties">
        <form class="form-inline">
*@
           @* <div class="fill_compose">
                <input type="text" name="skladnik" placeholder="Wpisz składnik" @bind="@_searchText">
            </div>*@
            @*<div class="category">
                <select class="category" @bind="@SelectedCategoryId">
                    <option value="0" selected>Wybierz kategorię</option>
                    @if (_categories is not null)
                    {
                        @foreach (var item in _categories)
                        {
                            <option value="@item.Id"> @item.Name </option>
                        }
                    }
                </select>
            </div>*@
      @*      <button type="button" class="search-btn " role="button" @onclick="e => FindCosmetics(_pageNumber = 1)">Szukaj</button>


        </form>
    </div>
    <div class="isContain">
        <EditForm Model="_searchOption">
            <InputRadioGroup @bind-Value="SelectedSearchOption">
                @foreach (var option in _searchOptions)
                {
                    <InputRadio Value="option.IsContain"/>
                    @option.Name
                }
            </InputRadioGroup>
        </EditForm>
    </div>*@
    @*<div class="fill_compose  form-group">
        <input type="text" name="skladnik" placeholder="Wpisz składnik" @bind="@_searchText">
    </div>

    <div class="category">
        <select class="category" @bind="@SelectedCategoryId">
            <option value="0" selected>Wybierz kategorię</option>
            @if (_categories is not null)
            {
                @foreach (var item in _categories)
                {
                    <option value="@item.Id"> @item.Name </option>
                }
            }
        </select>
    </div>

    <button type="button" class="search-btn btn btn-outline-primary " role="button" @onclick="e => FindCosmetics(_pageNumber=1)">Szukaj</button>
    *@
    @*<div class="morethanone">
        <p class="text-sm-left"> Wiele składników oddziel przecinkami</p>
    </div>*@
@*
      <div class="form-check form-check-inline">
        <input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio1" value="option1">
        <label class="form-check-label" for="inlineRadio1">zawiera</label>
    </div>
    <div class="form-check form-check-inline">
        <input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio2" value="option2">
        <label class="form-check-label" for="inlineRadio2">nie zawiera</label>
    </div>*@
 
    @*<div class="popularne">
    <p class="text-xl-left">WYBIERZ Z POPULARNYCH WYSZUKIWAŃ</p>
    </div>*@

    @* <div class=".form-inline">
        <button type="button" class="search-btn-2 " role="button">Bez silikonów</button>
        <button type="button" class="search-btn-2 " role="button">Nie dla wegan</button>
        <button type="button" class="search-btn-2 " role="button">Bez alergenów</button>
        <button type="button" class="search-btn-2 " role="button">Nie dla kobiet w ciąży</button>
        <button type="button" class="search-btn-2 " role="button">Kosmetyki naturalne</button>
        <button type="button" class="search-btn-2 " role="button">Bez substancji zapachowych</button>
    </div>*@

   @* <div class=".form-inline">
        <button class="popularne-btn btn btn-outline-danger" role="button">Bez silikonów </button >
        <button class="popularne-btn btn btn-outline-danger" role="button">Nie dla wegan </button >
        <button class="popularne-btn btn btn-outline-danger" role="button">Bez alergenów </button >
        <button class="popularne-btn btn btn-outline-danger" role="button">Nie dla kobiet w ciąży </button >
        <button class="popularne-btn btn btn-outline-danger" role="button">Kosmetyki naturalne </button >
        <button class="popularne-btn-2 btn btn-outline-danger" role="button">Bez substancji zapachowych </button >
    </div>*@

    @if (_cosmetics is not null)
    {
        <div class="details">
            <div class="total-count">
                @_totalRecords wyników
            </div>
            <div class="sort">
                <Sort OnSortChanged="SortChanged"></Sort>
            </div>
        </div>


        <div class="product-list">
            <ProductList Cosmetics="_cosmetics"></ProductList>
        </div>
        <div class="pagination">
            <Pagination TotalPagesQuantity="_totalPages" CurrentPage="_pageNumber" Radius="2" SelectedPage="SelectedPage"></Pagination>
        </div>
    }
</div> 

@code {
    private int _totalPages;
    private int _pageNumber = 1;
    private int _totalRecords;
    private string _silikony = "aqua, ascorbic acid";

  
    private string? _searchText;
    readonly SearchOption _searchOption = new();
    bool SelectedSearchOption { get; set; } = true;
    int SelectedCategoryId { get; set; }
    private bool _isLoading;

    private string _sortField = "id";
    private bool _ascending = true;

    private IEnumerable<CategoryResponse>? _categories;
    private IEnumerable<CosmeticResponse>? _cosmetic;
    private CosmeticsResponse? _cosmetics;
    
    public record SearchOption
    {
        public bool IsContain { get; set; }
        public string Name { get; set; }
    }

    readonly List<SearchOption> _searchOptions = new()
    {
        new SearchOption {IsContain = true, Name ="  Zawiera         "},
        new SearchOption {IsContain = false, Name ="  Nie zawiera"}
    };
  
    protected override async Task OnInitializedAsync()
    {
        _categories = await CosmeticFinderApi.GetCategories();
    }

    private async Task SelectedPage(int page)
    {
        _pageNumber = page;
        await FindCosmetics(_pageNumber);
    }

    private async Task SortChanged(string orderBy)
    {
       
        if (orderBy == "Nazwa a-z")
        {
            _sortField = "brand";
            _ascending = true;
        }
        else if (orderBy == "Nazwa z-a")
        {
            _sortField = "brand";
            _ascending = false;
        }
        else if (orderBy == "Cena rosnąco")
        {
            _sortField = "price";
            _ascending = true;
        }
        else if (orderBy == "Cena malejąco")
        {
            _sortField = "price";
            _ascending = false;
        }
        else
        {
            _sortField = "price";
            _ascending = false;
        }
        await FindCosmetics(1);
        await SelectedPage(1);
    } 

    async Task FindCosmetics(int page=1, int quantityPerPage = 24)
    {
        if (_searchText is not null && !string.IsNullOrWhiteSpace(_searchText) && SelectedCategoryId != 0)
        {
            var request = new GetCosmeticsRequest
            {
                PageNumber = page,
                PageSize = quantityPerPage,
                Search = _searchText,
                MainCategoryId = SelectedCategoryId,
                SortField = _sortField,
                Ascending = _ascending,
                ShouldContainCompose = SelectedSearchOption
            };
            LoadingOn();
            _cosmetics = await CosmeticFinderApi.GetCosmetic(request);
            _totalPages=_cosmetics.TotalPages;
            _totalRecords = _cosmetics.TotalRecords;
            LoadingOff();
        }
    }

    async Task Silikony()
    {
        _searchText = $"{_searchText} {_silikony}";
   
        //_searchText = _silikony;
        SelectedSearchOption = false;
        FindCosmetics(1);

    }


    void LoadingOn()
    {
        _isLoading = true;
    }
    
    void LoadingOff()
    {
        _isLoading = false;
    }
}